services:
  redis-server:
    image: "redis:7.2.4"
    container_name: redis-server
    restart: always
    command: --requirepass redis@123
    ports:
      - 6379:6379
    networks:
      - workstation
    healthcheck:
      test: [ "CMD", "redis-cli" ,"ping" ]
      interval: 5s
      timeout: 10s
      retries: 10
  mysql-server:
    image: "mysql:8.3.0"
    container_name: mysql-server
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root@123
      MYSQL_DATABASE: workstation
      TZ: Asia/Shanghai
    volumes:
      - ./sql/workstation.sql:/docker-entrypoint-initdb.d/workstation.sql
      - workstation:/var/lib/mysql
    restart: always
    networks:
      - workstation
    command:
      --max_connections=1000
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
  workstation-server:
    build:
      context: ./build
      dockerfile: Dockerfile
    container_name: workstation-server
    restart: always
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-server:3306/workstation?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true&allowMultiQueries=true
      - SPRING_DATA_REDIS_HOST=redis-server
    depends_on:
      mysql-server:
        condition: service_healthy
      redis-server:
        condition: service_healthy
    networks:
      - workstation
networks:
  workstation:
volumes:
  workstation:
